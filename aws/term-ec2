#!/bin/bash

cd $(dirname "$0")

RED=$(tput setaf 1)
YELLOW=$(tput setaf 3)
RESET=$(tput sgr0)

CACHE_ARG='-C'
FILTER_TERM=''
SKIP_PROMPT=0
USE_STOP=0

usage() {
  echo 'Usage: term-ec2 [-c] [-f] [-s] [FILTER]'
  echo ''
  echo 'Search and destroy EC2 instances'
  echo ''
  echo 'Options:'
  echo ''
  echo '-c        Tell the underlying find-ec2 script to use the cache'
  echo '-f        Force terminating the instances without confirmation'
  echo '-s        Stop instances instead of terminating them'
  echo 'FILTER    Optional filter string to pre-apply to the search'
}

while [[ "$#" != 0 ]]; do
  case "$1" in
    -c|--cache)
      CACHE_ARG=''
      shift
      ;;
    -f|--force)
      SKIP_PROMPT=1
      shift
      ;;
    -s|--stop)
      USE_STOP=1
      shift
      ;;
    --help)
      usage
      exit 0
      ;;
    -*)
      usage >&2
      exit 1
      ;;
    *)
      if [[ "$FILTER_TERM" != '' ]]; then
        usage >&2
        exit 2
      fi

      FILTER_TERM="$1"
      shift
      ;;
  esac
done

if ! which fzf &> /dev/null; then
  echo 'Please install fzf to use this script'
  exit 1
fi

FIND_FORMAT=allips
FIND_PRESENTATION='| .[0] + " " + .[1] + "/" + .[2] + " " + .[3]'

INSTANCES=$(
  ./find-ec2 "$CACHE_ARG" -f "$FIND_FORMAT" -p "$FIND_PRESENTATION" "$FILTER_TERM" 2> /dev/null |
    fzf --ansi -i -0 -1 -m --prompt='Select instances: ' |
    tr -s ' '
)

if [[ "$INSTANCES" == '' ]]; then
  echo "${RED}Nothing selected.$RESET" >&2
  exit 1
fi

if [[ "$USE_STOP" == 1 ]]; then
  VERB="Stopping"
  WARNING_VERB='STOPPED'
  SUBCMD=stop-instances
else
  VERB="Terminating"
  WARNING_VERB='TERMINATED'
  SUBCMD=terminate-instances
fi

echo "${YELLOW}The following instances will be $WARNING_VERB:"
echo "$INSTANCES"
echo "$RESET"

if [[ "$SKIP_PROMPT" != 1 ]]; then
  read -n 1 -p "Is this OK? " conf
  echo ''
fi

if [[ "$conf" != 'y' && "$conf" != 'Y' ]]; then
  echo "${RED}Aborted!$RESET" >&2
  exit 1
fi

echo "$YELLOW$VERB...$RESET"
echo ''

echo "$INSTANCES" | while read inst; do
  echo $inst | rev | cut -d ' ' -f 1 | rev
done | xargs aws ec2 "$SUBCMD" --instance-ids
